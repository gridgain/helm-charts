# -- String to partially override common.names.fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override common.names.fullname template
fullnameOverride: ""
# -- Add annotations to all the deployed resources
commonAnnotations: {}
# -- Map of labels
labels: {}
# -- Annotations for GridGain resources
annotations: {}
# -- Map of labels to add to the pods
podLabels: {}
# -- Map of annotations to add to the pods
podAnnotations: {}
# -- Add labels to all the deployed resources. May be templated
customLabels: {}

image:
  # -- GridGain image registry
  registry: docker.io
  # -- GridGain image repository
  repository: gridgain/gridgain9
  # -- GridGain image tag. Immutable tags are recommended
  # -- if not set appVersion field from Chart.yaml is used
  tag: 
  # -- GridGain image pull policy
  # -- Specify a imagePullPolicy [imagePullPolicy](https://kubernetes.io/docs/user-guide/images/#pre-pulling-images)
  # -- Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  pullPolicy: IfNotPresent

# -- Optionally specify GridGain statefulset [podManagementPolicy](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies)
podManagementPolicy: OrderedReady
# -- The maximum number of revisions that will be maintained in the StatefulSet's [revision history](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit)
revisionHistoryLimit: 10

# -- GridGain [persistent storage directory](https://www.gridgain.com/docs/latest/developers-guide/persistence/native-persistence#configuring-persistent-storage-directory)
gridgainWorkDir: /persistence

# -- GridGain storage configuration
# @default -- Check defaults below
storage:
  # -- Storage profile configuration for GridGain data storage
  profile:
    # -- Percentage of memory limit to use for default storage profile (0-100)
    # -- The actual sizeBytes will be calculated as: memory_limit * percentage / 100
    # -- Default: 60% of memory limit
    memoryPercentage: 60

# -- [GridGain license](https://www.gridgain.com/docs/latest/installation-guide/licenses) to be created or mounted as a secret. Needed to use GridGain Enterprise Edition (EE) or Ultimate Edition (UE)
license: {}
# license:
# # -- path inside GridGain container to mount the file with license
#   mountPath: /opt/gridgain/etc/license9.conf
# # -- Create secret with license from file inside chart folder
#   fromFile:
# # -- Relative path to file inside chart folder 
#     filepath: files/configmaps/license9.conf
# # -- Create secret from raw content passed
#   createSecret: 
#     mountPath: /opt/gridgain/etc/license9.conf
# # -- License raw content
#     content: |
#       ignite {
# # Authentication and Authorization https://www.gridgain.com/docs/gridgain9/latest/administrators-guide/security/authentication
# # -- Basic Authentication
#         security {
#           enabled:true,
#           authentication.providers:[{
#             name:default,
#             type:basic,
#             users:[
#               {
#                 username:ignite,
#                 displayName:administrator,
#                 password:ignite,
#                 roles:["system"]
#               }
#             ]
#           }]
#         }
#         license{content:""}
#       }

# # -- Existing secret with license to be mounted
#   useExisting:
# # -- Name of the secret
#     secretname: somesecret
# # -- Key in the secret
#     secretkey: license9.conf

# -- Number of GridGain cluster replicas
replicaCount: 3

# -- GridGain  main configuration to be injected as ConfigMap. 
# @default -- Check default values.yaml to view default config
configMaps: {}

# -- GridGain  main configuration to be injected as ConfigMap from files (files/configmaps)
configMapsFromFile:
  gridgain-config:
    filename: gridgain-config.conf
    path: /opt/gridgain/etc/gridgain-config.conf

# -- Existing configmap with GridGain configuration to be mounted to StatefulSet
existingConfigmap: {}
# existingConfigmap:
#   name: configmap-name
#   path: /blablabla/cm.xml

# -- Array with extra environment variables to add to GridGain  nodes
extraEnvVars: []
# extraEnvVars:
#   - name: FOO
#     value: "bar"

# -- JMX configuration for metrics exposure
jmx:
  # -- Enable JMX metrics exposure
  enabled: false
  # -- JMX port for metrics
  port: 9404
  # -- JMX agent configuration
  agent:
    # -- JMX agent image
    image: "busybox:1.36"
    # -- JMX agent image pull policy
    pullPolicy: IfNotPresent
    # -- JMX agent resources
    resources:
      limits:
        cpu: "100m"
        memory: "128Mi"
      requests:
        cpu: "50m"
        memory: "64Mi"
  # -- JMX configuration file content
  config: |
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true

  # rules:
  #   - pattern: '^java.lang<type=OperatingSystem><>SystemLoadAverage'
  #     name: os_system_load_average
  #     help: "System load average for the last minute (from OperatingSystemMXBean)"
  #     type: GAUGE
  #   - pattern: '^org.apache.metrics<type=jvm><>memory.heap.used'
  #     name: jvm_memory_usage
  #     type: GAUGE
  #     attrNameSnakeCase: true

# -- Name of existing ConfigMap containing extra env vars for GridGain  nodes
extraEnvVarsCM: ""
# -- Name of existing Secret containing extra env vars for GridGain  nodes
extraEnvVarsSecret: ""
# -- Override default container command (useful when using custom images)
command: []
# -- Override default container args (useful when using custom images)
args: []
# -- Lifecycle hooks for GridGain  container
lifecycleHooks: {}

# -- Configures (liveness probe)[https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes] for GridGain container
# @default -- Check defaults below
livenessProbe:
  # -- Enables livenessProbe on GridGain container
  enabled: true
  # -- Path and port for probe
  httpGet:
    path: /management/v1/node/state
    port: 10300
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 5
  # -- Period seconds for livenessProbe
  periodSeconds: 30
  # -- Timeout seconds for livenessProbe
  timeoutSeconds: 10
  # -- Failure threshold for livenessProbe
  failureThreshold: 3
  # -- Success threshold for livenessProbe
  successThreshold: 1

# -- Configures (readiness probe)[https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes] for GridGain container
# @default -- Check defaults below
readinessProbe:
  # -- Enables readinessProbe on GridGain container
  enabled: true
  # -- Path and port for probe
  httpGet:
    path: /management/v1/node/state
    port: 10300
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 30
  # -- Period seconds for readinessProbe
  periodSeconds: 10
  # -- Timeout seconds for readinessProbe
  timeoutSeconds: 10
  # -- Failure threshold for readinessProbe
  failureThreshold: 3
  # -- Success threshold for readinessProbe
  successThreshold: 1

# -- Configures (startup probe)[https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes] for GridGain container
# @default -- Check defaults below
startupProbe:
  # -- Enables startupProbe on GridGain container
  enabled: false
  # -- Initial delay seconds for startupProbe
  initialDelaySeconds: 30
  # -- Period seconds for startupProbe
  periodSeconds: 10
  # -- Timeout seconds for startupProbe
  timeoutSeconds: 1
  # -- Failure threshold for startupProbe
  failureThreshold: 15
  # -- Success threshold for startupProbe
  successThreshold: 1

# -- GridGain  [resource](https://kubernetes.io/docs/user-guide/compute-resources/) requests and limits
# @default -- Check defaults below
resources:
  limits:
    # -- The cpu limit for the GridGain  containers
    cpu: "1"
    # -- The memory limit for the GridGain  containers
    memory: 2Gi
  requests:
    # -- The requested cpu for the GridGain  containers
    cpu: "1"
    # -- The requested memory for the GridGain  containers
    memory: 2Gi

# -- Hook job [resource](https://kubernetes.io/docs/user-guide/compute-resources/) requests and limits for init and recovery jobs
# @default -- Check defaults below
hookResources:
  limits:
    # -- The cpu limit for the hook job containers
    cpu: "1"
    # -- The memory limit for the hook job containers
    memory: 2Gi
  requests:
    # -- The requested cpu for the hook job containers
    cpu: "500m"
    # -- The requested memory for the hook job containers
    memory: 1Gi

# -- [Pod Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for GridGain  pods
podSecurityContext:
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001

# -- [Container Security Context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for GridGain container
containerSecurityContext:
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

# -- [Affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity) for GridGain  pods assignment
affinity: {}
# -- [Node labels](https://kubernetes.io/docs/user-guide/node-selection/) for GridGain  pods assignment
nodeSelector: {}
# -- [Tolerations](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/) for GridGain  pods assignment
tolerations: []
# -- Name of the [PriorityClass](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority) for GridGain  pods
priorityClassName: ""
# -- [Topology Spread Constraints](https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods) for pod assignment spread across your cluster among failure-domains. Evaluated as a template
topologySpreadConstraints: []
# -- Seconds GridGain  pod needs to [terminate gracefully](https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods)
terminationGracePeriodSeconds: 30

# -- GridGain  statefulset [rolling update configuration](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies) parameters
# @default -- Check default below
updateStrategy:
# -- GridGain  statefulset strategy type
  type: RollingUpdate
# -- GridGain  statefulset rolling update configuration parameters
  rollingUpdate: 
    partition: 0
# -- Optionally specify extra list of additional volumeMounts for the GridGain  container(s)
extraVolumeMounts: []
# -- Optionally specify extra list of additional volumes for the GridGain  pod(s)
extraVolumes: []

# -- Add additional sidecar containers to the GridGain  pod(s)
sidecars: []
# sidecars:
#   - name: your-image-name
#     image: your-image
#     imagePullPolicy: Always
#     ports:
#       - name: portname
#         containerPort: 1234

# -- Add additional init containers to the GridGain  pod(s)
initContainers: []
# initContainers:
#   - name: do-something
#     image: busybox
#     command: ['do', 'something']
# -- Optionally specify extra PodSpec for the GridGain  pod(s)
extraPodSpec: {}

# -- GridGain container ports
# @default -- check default container ports in values.yaml
containerPorts:
  # default REST API port
  - containerPort: 10800
    protocol: TCP
  # default management port
  - containerPort: 10300
    protocol: TCP
  # default cluster port
  - containerPort: 3344
    protocol: TCP
  # JMX metrics port (only added when jmx.enabled is true)
  - containerPort: 9404
    protocol: TCP

# -- Default GridGain  service configuration. By default all the existing ports are exposed using headless service. REST and thin-client port are exposed via ClusterIP. 
# @default -- check default services configuration in values.yaml
services:
  headless:
    type: ClusterIP
    clusterIP: None
    ports:
      management: 10300
      rest: 10800
      cluster: 3344
    sessionAffinity: None
  # thin:
  #   type: LoadBalancer
  # -- Enable [client source IP preservation(https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip)
  #   externalTrafficPolicy: Cluster
  #   ports:
  #     rest: 10800
  #     management: 10300
  #   sessionAffinity: None

# -- GridGain  persistence configuration
# @default -- By default only one volume will be created. Check default values.yaml to view more details
persistence:
  volumePermissions:
    # -- Enable init container that changes the owner and group of the persistent volume
    enabled: true
    image:
      # -- Init container volume-permissions image registry
      registry: docker.io
      # -- Init container volume-permissions image repository
      repository: debian
      # -- Init container volume-permissions image tag (immutable tags are recommended)
      tag: 12.12-slim
      # -- Init container volume-permissions image pull policy
      pullPolicy: IfNotPresent
    # -- Init container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/)
    resources: {}

    # -- Init container [Security Context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
    # Note: the chown of the data folder is done to containerSecurityContext.runAsUser
    # and not the below volumePermissions.containerSecurityContext.runAsUser
    # @default -- disabled
    containerSecurityContext:
      # -- Set SELinux options in container
      seLinuxOptions: {}
      # -- User ID for the init container
      runAsUser: 0
      # -- Group ID for the init container
      runAsGroup: 0
      # -- runAsNonRoot for the init container
      runAsNonRoot: false
      # -- seccompProfile.type for the init container
      seccompProfile:
        type: RuntimeDefault
  persistentVolumeClaimRetentionPolicy:
    # -- Enable Persistent volume retention policy
    enabled: false
    # -- Volume retention behavior when the replica count of the StatefulSet is reduced
    whenScaled: Retain
    # -- Volume retention behavior that applies when the StatefulSet is deleted
    whenDeleted: Retain
  volumes:
    persistence:
      # -- Enable GridGain  data persistence using PVC
      enabled: true
      # -- Name of an existing PVC to use
      existingClaim: ""
      # -- The path the volume will be mounted at
      mountPath: /persistence
      # -- The subdirectory of the volume to mount to. Useful in dev environments and one PV for multiple services
      subPath: ""
      storageClassName: ""
      # -- PVC Access Mode for GridGain volume
      accessModes:
        - ReadWriteOnce
      # -- PVC Storage Request for GridGain volume
      size: 8Gi
      # -- Annotations for the PVC
      annotations: {}
      # -- Labels for the PVC
      labels: {}
      # -- Selector to match an existing Persistent Volume (this value is evaluated as a template)
      selector: {}
      # selector:
      #   matchLabels:
      #     app: my-app

# -- [Service account](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) for GridGain to use. 
# @default -- Check defaults below
serviceAccount:
  # -- Enable creation of ServiceAccount for GridGain pod
  create: false
  # -- The name of the ServiceAccount to use. If not set and create is true, a name is generated using the common.names.fullname template
  name: ""
  # -- Allows auto mount of ServiceAccountToken on the serviceAccount created. Can be set to false if pods using this serviceAccount do not need to use K8s API
  automountServiceAccountToken: true
  # -- Additional custom annotations for the ServiceAccount
  annotations: {}

# -- [RBAC configuration](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) for ServiceAccount. 
rbac:
  # -- Creates default Role and RoleBinding
  create: true
  # -- Custom RBAC rules to be added
  rules: []
  # rules:
  #   - apiGroups:
  #       - ""
  #     resources:
  #       - pods
  #     verbs:
  #       - get
  #       - list

# -- [Network Policies](https://kubernetes.io/docs/concepts/services-networking/network-policies/)
networkPolicy: {}
# networkPolicy:
#   create: true
#   ingress:
#   - from:
#     - namespaceSelector:
#         matchLabels:
#           kubernetes.io/metadata.name: default
#     ports:
#     - port: 3344
#       protocol: TCP
#     - port: 10800
#       protocol: TCP
#   egress:
#   - ports:
#     - port: 53
#       protocol: UDP
#     - port: 53
#       protocol: TCP
#     to:
#     - namespaceSelector: {}
#       podSelector:
#         matchLabels:
#           k8s-app: kube-dns

# -- ServiceMonitor configuration for Prometheus metrics scraping
serviceMonitor:
  # -- Enable ServiceMonitor for Prometheus
  enabled: false
  # -- ServiceMonitor interval
  interval: 30s
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 10s
  # -- ServiceMonitor path
  path: /metrics
  # -- ServiceMonitor port
  port: metrics
  # -- ServiceMonitor labels
  labels: {}
  # -- ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor namespace
  namespace: ""
  # -- ServiceMonitor namespaceSelector
  namespaceSelector: {}
  # -- ServiceMonitor selector
  selector: {}
  # -- ServiceMonitor endpoints
  endpoints: []
  # -- ServiceMonitor jobLabel
  jobLabel: ""
  # -- ServiceMonitor targetLabels
  targetLabels: []
  # -- ServiceMonitor podTargetLabels
  podTargetLabels: []
  # -- ServiceMonitor sampleLimit
  sampleLimit: 0
  # -- ServiceMonitor targetLimit
  targetLimit: 0
  # -- ServiceMonitor labelLimit
  labelLimit: 0
  # -- ServiceMonitor labelNameLengthLimit
  labelNameLengthLimit: 0
  # -- ServiceMonitor labelValueLengthLimit
  labelValueLengthLimit: 0

# -- KEDA ScaledObject configuration for autoscaling
keda:
  # -- Enable KEDA ScaledObject
  enabled: false
  # -- KEDA ScaledObject polling interval
  pollingInterval: 30
  # -- KEDA ScaledObject cooldown period
  cooldownPeriod: 300
  # -- KEDA ScaledObject min replica count
  minReplicaCount: 1
  # -- KEDA ScaledObject max replica count
  maxReplicaCount: 10
  # -- KEDA ScaledObject triggers
  triggers: []
  # keda:
  #   triggers:
  #     - type: prometheus
  #       metadata:
  #         serverAddress: http://prometheus-server.monitoring.svc.cluster.local:9090
  #         metricName: gridgain_cluster_size
  #         query: gridgain_cluster_size
  #         threshold: "3"

# -- Array of extra objects to deploy with the release (evaluated as a template)
extraDeploy: []
# -- Array of extra post install/upgrade hooks to deploy with the release (partially evaluated as a template)
extraPostHooks: []
