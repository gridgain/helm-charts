# -- String to partially override common.names.fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override common.names.fullname template
fullnameOverride: ""
# -- Add annotations to all the deployed resources
commonAnnotations: {}
# -- Map of labels
labels: {}
# -- Annotations for Control Center Spring application resources
annotations: {}
# -- Map of labels to add to the pods
podLabels: {}
# -- Map of annotations to add to the pods
podAnnotations: {}
# -- Add labels to all the deployed resources. May be templated
customLabels: {}

# -- Number of Control Center Spring application replicas
replicaCount: 1

image:
  # -- Control Center Spring application image repository, cloud-connector will be used by default
  repository: gridgain/control-center-cloud-connector
  # -- Control Center Spring application image tag. Immutable tags are recommended
  # -- if not set appVersion field from Chart.yaml is used
  tag:
  # -- Control Center Spring application image pull policy
  # -- Specify a imagePullPolicy [imagePullPolicy](https://kubernetes.io/docs/user-guide/images/#pre-pulling-images)
  # -- Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  pullPolicy: IfNotPresent

# -- Name of the secret to pull a docker image from [private registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []

# -- [Service account](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) for Control Center Spring application to use
# @default -- Check defaults below
serviceAccount:
  # -- Enable creation of ServiceAccount for Control Center Spring application pod
  create: true

# -- [RBAC configuration](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) for ServiceAccount
rbac:
  # -- Creates default Role and RoleBinding
  create: true
  # -- Custom RBAC rules to be added
  rules: 
    - apiGroups: [""]
      resources: ["services", "pods", "endpoints", "configmaps"]
      verbs: ["get","list"]

# -- Spring configuration for Control Center Spring application
spring:
  # -- Ensures that Spring trusts Kubernetes certificate for use with service discovery, configuration, etc.
  trustKubernetesCertificates: true
  # -- Customized config for Control Center Spring application. by default will be rendered to `/opt/app/config/application.yml`
  config:
    # -- Currently supports only file
    type: file
    # -- Name of the config
    name: application.yaml
    # -- Path of the config
    path: /opt/app/config
    # -- Contents of config in YAML
    content: |-
      server:
        port: 3000

      management:
        endpoints:
          web:
            exposure:
              include: health,info,metrics,loggers
      
      connector:
        cc-uri: http://cc-backend.svc.cluster.local:3000
        heartbeat.thread-pool-size: 30

# -- Control Center Spring application container ports
containerPort: 3000

# -- Array with extra environment variables to add to Control Center Spring application  nodes
extraEnv:
  JVM_OPTS: -Xms256m -Xmx480m

# -- [Pod Security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for Control Center Spring application  pods
securityContext:
  runAsUser: 10001
  fsGroup: 10001

# -- Control Center Spring application  [resource](https://kubernetes.io/docs/user-guide/compute-resources/) requests and limits
# @default -- Check defaults below
resources:
  limits:
    # -- The cpu limit for the Control Center Spring application  containers
    cpu: 300m
    # -- The memory limit for the Control Center Spring application  containers
    memory: 512Mi
  requests:
    # -- The requested cpu for the Control Center Spring application  containers
    cpu: 300m
    # -- The requested memory for the Control Center Spring application  containers
    memory: 512Mi

# -- Configures (liveness probe)[https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes] for Control Center Spring application container
# @default -- Check defaults below
livenessProbe:
  # -- Path and port for probe
  httpGet:
    path: /actuator/health
    port: http
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 300
  # -- Period seconds for livenessProbe
  periodSeconds: 10

# -- Configures (readiness probe)[https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes] for Control Center Spring application container
# @default -- Check defaults below
readinessProbe:
  # -- Path and port for probe
  httpGet:
    path: /actuator/health
    port: http
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 60
  # -- Period seconds for livenessProbe
  periodSeconds: 10

# -- [Node labels](https://kubernetes.io/docs/user-guide/node-selection/) for Control Center Spring application  pods assignment
nodeSelector: {}
# -- [Tolerations](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/) for Control Center Spring application  pods assignment
tolerations: []
# -- [Affinity](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity) for Control Center Spring application  pods assignment
affinity: {}
# -- Name of the [PriorityClass](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority) for Control Center Spring application  pods
priorityClassName: ""

# -- Default Control Center Spring application  service configuration
# @default -- check default services configuration in values.yaml
service:
  test: true
  enabled: true
  httpPort: 80
  type: ClusterIP

# -- [Kubernetes Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) configuration
# @default -- check example of configuration in values.yaml
ingress:
  # -- If true, Control Center Spring application Ingress will be created
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx    
  test: false
  host: connector.example.io
  hosts:
  - host: "connector.example.io"
    paths:
      - path: "/api/v1/metrics"
      - path: "/api/v1/events"
  # -- Ingress TLS configuration secrets, secret must be manually created in the namespace
  tls:
  - secretName: connector.example.io-tls
    hosts:
    - connector.example.io

# -- [Disruption Budget](https://kubernetes.io/docs/tasks/run-application/configure-pdb/) configuration
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# -- Additional configuration to be injected as ConfigMap
configMaps: {}
  # appconfig:
  #   path: /opt/app/config.xml
  #   name: config.xml
  #   content: |
  #     <xml></xml>
